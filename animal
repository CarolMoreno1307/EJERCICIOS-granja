from abc import ABC, abstractmethod

class Animal(ABC):
    def __init__(self, nombre, especie, peso):
        self._nombre = nombre
        self._especie = especie
        self._peso = peso
        self._vacunado = False

    @property
    def nombre(self):
        return self._nombre

    @nombre.setter
    def nombre(self, valor):
        if not valor:
            raise ValueError("El nombre no puede estar vac√≠o.")
        self._nombre = valor

    @abstractmethod
    def alimentar(self, cantidad):
        pass

    @abstractmethod
    def vacunar(self):
        pass

    def registrar_peso(self, nuevo_peso):
        if nuevo_peso <= 0:
            raise ValueError("El peso debe ser positivo.")
        self._peso = nuevo_peso
        return self._peso

class Perro(Animal):
    def alimentar(self, cantidad):
        self._peso += cantidad
        return self._peso

    def vacunar(self):
        self._vacunado = True
        return self._vacunado

class Granja:
    def __init__(self):
        self.animales = []

    def agregar_animal(self, animal):
        self.animales.append(animal)

# Uso de la clase
perro = Perro("Fido", "Perro", 10)
print(perro.alimentar(2))
print(perro.vacunar())
